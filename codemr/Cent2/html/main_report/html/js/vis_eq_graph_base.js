for(var network,allNodes,highlightActive=!1,arrayLength=nodesData.length,i=0;i<arrayLength;i++)nodesData[i].colorx=nodesData[i].color;var nodesDataset=new vis.DataSet(nodesData),edgesDataset=new vis.DataSet(edgesData);function redrawAll(){var e=document.getElementById("mynetwork"),a=codemr.metricchart("metricchart",classMetricSpec,classMetricValues,!0),l=codemr.metricchart("metric-chart-package",packageMetricSpec,packageMetricValues,!0),o={nodes:nodesDataset,edges:edgesDataset},t=EQ_generateClassMetricMap(EQ_GET_DATA());(network=new vis.Network(e,o,{nodes:{borderWidth:0},edges:{arrowStrikethrough:!1,smooth:{type:"continuous",roundness:0}},physics:!1,interaction:{tooltipDelay:200,dragView:!1}})).on("selectNode",(function(e){var o=e.nodes[0],s=nodesData[o].key;if(metricvalues=t[s],metricvalues)a.updateMetricValues(EQ_convertMetricValues(metricvalues),nodesData[o].title),"none"===n.style.display&&(n.style.display="block"),"block"===r.style.display&&(r.style.display="none");else{var n=document.getElementById("metricchart"),r=document.getElementById("metricchart");pmetricvalues=t.packageMetricValues[s],l.updateMetricValues(EQ_convertMetricValues(pmetricvalues),nodesData[o].title);n=document.getElementById("metricchart"),r=document.getElementById("metric-chart-package");"block"===n.style.display&&(n.style.display="none"),"none"===r.style.display&&(r.style.display="block")}})),network.on("zoom",(function(e){document.getElementById("eventSpan").innerHTML="Zoom Scale: "+parseFloat(Math.round(100*e.scale)/100).toFixed(2)})),allNodes=nodesDataset.get({returnType:"Object"}),assignClusters(clusters),network.on("doubleClick",(function(e){if(e.nodes.length>0){var a,l;highlightActive=!0;var o=e.nodes[0];for(var t in allNodes)allNodes[t].color="rgba(200,200,200,0.5)",void 0===allNodes[t].hiddenLabel&&(allNodes[t].hiddenLabel=allNodes[t].label,allNodes[t].label=void 0);var s=network.getConnectedNodes(o),n=[];for(a=1;a<2;a++)for(l=0;l<s.length;l++)n=n.concat(network.getConnectedNodes(s[l]));for(a=0;a<n.length;a++)allNodes[n[a]].color="rgba(150,150,150,0.75)",void 0!==allNodes[n[a]].hiddenLabel&&(allNodes[n[a]].label=allNodes[n[a]].hiddenLabel,allNodes[n[a]].hiddenLabel=void 0);for(a=0;a<s.length;a++)allNodes[s[a]].color=allNodes[s[a]].colorx,void 0!==allNodes[s[a]].hiddenLabel&&(allNodes[s[a]].label=allNodes[s[a]].hiddenLabel,allNodes[s[a]].hiddenLabel=void 0);allNodes[o].color=allNodes[o].colorx,void 0!==allNodes[o].hiddenLabel&&(allNodes[o].label=allNodes[o].hiddenLabel,allNodes[o].hiddenLabel=void 0)}else if(!0===highlightActive){for(var t in allNodes)allNodes[t].color=allNodes[t].colorx,void 0!==allNodes[t].hiddenLabel&&(allNodes[t].label=allNodes[t].hiddenLabel,allNodes[t].hiddenLabel=void 0);highlightActive=!1}var r=[];for(t in allNodes)allNodes.hasOwnProperty(t)&&r.push(allNodes[t]);nodesDataset.update(r)}));var s=0,n=0,r=0,d=0;network.on("dragStart",(function(e){var a=e.nodes[0];if(void 0===a)return r=e.pointer.canvas.x,void(d=e.pointer.canvas.y);r=e.pointer.canvas.x,d=e.pointer.canvas.y,s=allNodes[a].x-e.pointer.canvas.x,n=allNodes[a].y-e.pointer.canvas.y})),network.on("dragging",(function(e){var a=e.nodes[0];if(void 0!==a){if(!e.event.srcEvent.ctrlKey)return r=e.pointer.canvas.x,d=e.pointer.canvas.y,allNodes[a].x=e.pointer.canvas.x+s,void(allNodes[a].y=e.pointer.canvas.y+n);var l=allNodes[a].cls;l>=0&&(moveCluster(clusters[l],clustersBounds[l],e.pointer.canvas.x-r,e.pointer.canvas.y-d),r=e.pointer.canvas.x,d=e.pointer.canvas.y)}})),network.on("dragEnd",(function(e){var a=e.nodes[0];if(void 0===a)return(l=findBoudingCluster(clustersBounds,r,d))>=0?void moveCluster(clusters[l],clustersBounds[l],e.pointer.canvas.x-r,e.pointer.canvas.y-d):void 0;if(e.event.srcEvent.ctrlKey){var l;if((l=allNodes[e.nodes[0]].cls)<0)return;moveCluster(clusters[l],clustersBounds[l],e.pointer.canvas.x-r,e.pointer.canvas.y-d)}else allNodes[a].x=e.pointer.canvas.x+s,allNodes[a].y=e.pointer.canvas.y+n})),network.on("beforeDrawing",(function(e){calculateClusterBounds(clusters,clustersBounds);for(var a=clusters.length,l=0;l<a;l++)drawACluster(e,clustersBounds[l])}))}redrawAll();
