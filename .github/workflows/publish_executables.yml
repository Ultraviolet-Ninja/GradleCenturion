# This workflow will build a Java project with Gradle
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: Publishing Executable files using Gradle

on:
  push:
    branches:
      - main

jobs:
  windows-pipeline:

    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'adopt'
          check-latest: true

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

#      - name: Build with Gradle
#        run: ./gradlew build

      - name: Creating the Executable
        run: ./gradlew jpackageImage

#      - name: Set up QEMU
#        uses: docker/setup-qemu-action@v1
#
#      - name: Set up Docker Buildx
#        uses: docker/setup-buildx-action@v1
#
#      - name: Login to DockerHub
#        uses: docker/login-action@v1
#        with:
#          username: ${{ secrets.DOCKER_USERNAME }}
#          password: ${{ secrets.DOCKER_PASSWORD }}
#
#      - name: Docker Build and Push
#        id: docker_build
#        run: ./gradlew dockerPushDockerHub

      - name: Upload Releases
        run: ./gradlew releaseToGitHub -PauthToken=${{ secrets.GITHUB_TOKEN }}

  linux-pipeline:
    runs-on: ubuntu-latest
    needs: windows-pipeline

    steps:
      - uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'adopt'
          check-latest: true

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle
        run: ./gradlew build

#      - name: Linking Dependencies with Gradle
#        run: ./gradlew jlink

#      - name: Packaging with Gradle
#        run: ./gradlew jpackage

#      - name: Auto-Upload Releases
#        run: ./gradlew releaseToGitHub -PauthToken=${{ secrets.GITHUB_TOKEN }}

  mac-pipeline:

    runs-on: macos-latest
    needs: linux-pipeline

    steps:
      - uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'adopt'
          check-latest: true

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle
        run: ./gradlew build

#      - name: Linking Dependencies with Gradle
#        run: ./gradlew jlink

#      - name: Packaging with Gradle
#        run: ./gradlew jpackage

#      - name: Auto-Upload Releases
#        run: ./gradlew releaseToGitHub -PauthToken=${{ secrets.GITHUB_TOKEN }}