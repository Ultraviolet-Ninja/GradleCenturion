plugins {
    id 'java'
    id 'jacoco'
    id 'application'
    id 'com.palantir.docker' version '0.28.0'
}

group 'jasmine.jragon'
version '0.15.1'

mainClassName = 'bomb.Main'

compileJava {
    options.encoding("UTF-8")
}

compileTestJava {
    options.encoding("UTF-8")
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'com.jfoenix:jfoenix:8.0.10'
    implementation 'org.controlsfx:controlsfx:8.40.18'
    implementation group: 'eu.hansolo', name: 'Medusa', version: '8.3'
    implementation group: 'org.fxmisc.richtext', name: 'richtextfx', version: '0.10.6'
    implementation group: 'org.jgrapht', name: 'jgrapht-ext', version: '1.4.0'

    testImplementation group: 'org.testng', name: 'testng', version: '7.4.0'
}

test {
    useTestNG()
    finalizedBy(jacocoTestReport)
}

jacocoTestReport {
    reports.xml.enabled(true)
}

jar.manifest.attributes(['Main-Class': "${mainClassName}"])

task fatJar(type: Jar) {
    manifest.from jar.manifest
    from {
        configurations.runtimeClasspath.collect {it.isDirectory() ? it : zipTree(it)}
    } {
        exclude "META-INF/*.SF"
        exclude "META-INF/*.DSA"
        exclude "META-INF/*.RSA"
    }
}

artifacts {
    archives fatJar
}

docker {
    dependsOn(jar)
    name "${project.name.toLowerCase()}:${project.version}"
    files "${buildDir}/libs/${project.name}-${project.version}.jar"
    buildArgs([JAR_FILE: "${project.name}-${project.version}.jar"])
    tag('DockerHub', "jasminejragon/${project.name.replace("C", "-c").toLowerCase()}:${project.version}")
}

dockerfileZip {
    destinationDirectory = file("${buildDir}/zip/docker")
}

distZip {
    from projectDir
    include 'src/main/**/*'
    include 'documentation/distributions/**/*'
    include 'gradle/wrapper/**/*'
    include 'markdown/*'
    include 'build.gradle', 'gradlew', 'gradlew.bat', 'README.md', 'Progress.md'
}

distTar {
    from projectDir
    include 'src/main/**/*'
    include 'documentation/distributions/**/*'
    include 'gradle/wrapper/**/*'
    include 'markdown/*'
    include 'build.gradle', 'gradlew', 'gradlew.bat', 'README.md', 'Progress.md'
}